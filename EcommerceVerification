// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract EcommerceVerification {
    struct GiaoDich {
        bytes12 maDonHang;
        bytes12 maSanPham;
        string tenSanPham;
        string danhMuc;
        string tenKhachHang;
        uint soLuong;
        uint tongTien;
        string nguonThanhToan;
        string maGiaoDich;
        string maVanDon;
        string trangThaiGiaoHang;
        uint thoiGianDatHang;
    }

    struct ThongTinGiaoDichInput {
        bytes12 maDonHang;
        bytes12 maSanPham;
        string tenSanPham;
        string danhMuc;
        string tenKhachHang;
        uint soLuong;
        uint tongTien;
        string nguonThanhToan;
        string maGiaoDich;
        string maVanDon;
        string trangThaiGiaoHang;
    }

    mapping(bytes12 => GiaoDich) public giaoDichs;
    uint public soLuongGiaoDich = 0;

    event GiaoDichGhiNhan(
        bytes12 maDonHang,
        bytes12 maSanPham,
        string tenSanPham,
        string danhMuc,
        string tenKhachHang,
        uint soLuong,
        uint tongTien,
        string nguonThanhToan,
        string maGiaoDich,
        string maVanDon,
        string trangThaiGiaoHang,
        uint thoiGianDatHang
    );

    function ghiNhanGiaoDich(ThongTinGiaoDichInput memory input) public {
        require(giaoDichs[input.maDonHang].maDonHang == bytes12(0), "Ma don hang da ton tai");

        giaoDichs[input.maDonHang] = GiaoDich(
            input.maDonHang,
            input.maSanPham,
            input.tenSanPham,
            input.danhMuc,
            input.tenKhachHang,
            input.soLuong,
            input.tongTien,
            input.nguonThanhToan,
            input.maGiaoDich,
            input.maVanDon,
            input.trangThaiGiaoHang,
            block.timestamp
        );

        soLuongGiaoDich++;

        emit GiaoDichGhiNhan(
            input.maDonHang,
            input.maSanPham,
            input.tenSanPham,
            input.danhMuc,
            input.tenKhachHang,
            input.soLuong,
            input.tongTien,
            input.nguonThanhToan,
            input.maGiaoDich,
            input.maVanDon,
            input.trangThaiGiaoHang,
            block.timestamp
        );
    }

    function chungThucGiaoDich(bytes12 _maDonHang) public view returns (bool) {
        return giaoDichs[_maDonHang].maDonHang != bytes12(0);
    }

    function layThongTinGiaoDich(bytes12 _maDonHang) public view returns (
        bytes12, bytes12, string memory, string memory, string memory, uint, uint, string memory, string memory, string memory, string memory, uint
    ) {
        require(giaoDichs[_maDonHang].maDonHang != bytes12(0), "Giao dich khong ton tai");
        GiaoDich memory gd = giaoDichs[_maDonHang];
        return (
            gd.maDonHang,
            gd.maSanPham,
            gd.tenSanPham,
            gd.danhMuc,
            gd.tenKhachHang,
            gd.soLuong,
            gd.tongTien,
            gd.nguonThanhToan,
            gd.maGiaoDich,
            gd.maVanDon,
            gd.trangThaiGiaoHang,
            gd.thoiGianDatHang
        );
    }
}
