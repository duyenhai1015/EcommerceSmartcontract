// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

// Hợp đồng chứng thực giao dịch thương mại điện tử
contract EcommerceVerification {
    // Cấu trúc dữ liệu lưu trữ thông tin một giao dịch
    struct GiaoDich {
        uint maDonHang;        // Mã đơn hàng
        uint maSanPham;        // Mã sản phẩm
        string tenSanPham;     // Tên sản phẩm
        string danhMuc;        // Danh mục sản phẩm
        address khachHang;     // Địa chỉ ví của khách hàng
        uint soLuong;          // Số lượng sản phẩm
        uint tongTien;         // Tổng số tiền của đơn hàng
        string nguonThanhToan; // Phương thức thanh toán (Ví điện tử, Ngân hàng...)
        string maGiaoDich;     // Mã giao dịch từ cổng thanh toán
        string maVanDon;       // Mã vận đơn từ đơn vị vận chuyển
        string trangThaiGiaoHang; // Trạng thái đơn hàng (Đang giao, Hoàn thành...)
        uint thoiGianDatHang;  // Thời gian đặt hàng
    }

    // Mapping lưu danh sách giao dịch
    mapping(uint => GiaoDich) public giaoDichs;
    uint public soLuongGiaoDich = 0;

    // Sự kiện ghi nhận giao dịch mới
    event GiaoDichGhiNhan(
        uint maDonHang,
        uint maSanPham,
        string tenSanPham,
        address khachHang,
        uint tongTien,
        string nguonThanhToan,
        string maGiaoDich
    );

    // Hàm ghi nhận giao dịch mới vào blockchain
    function ghiNhanGiaoDich(
        uint _maDonHang,
        uint _maSanPham,
        string memory _tenSanPham,
        string memory _danhMuc,
        uint _soLuong,
        uint _tongTien,
        string memory _nguonThanhToan,
        string memory _maGiaoDich,
        string memory _maVanDon,
        string memory _trangThaiGiaoHang
    ) public {
        require(giaoDichs[_maDonHang].maDonHang == 0, "Ma don hang da ton tai");

        giaoDichs[_maDonHang] = GiaoDich(
            _maDonHang,
            _maSanPham,
            _tenSanPham,
            _danhMuc,
            msg.sender,
            _soLuong,
            _tongTien,
            _nguonThanhToan,
            _maGiaoDich,
            _maVanDon,
            _trangThaiGiaoHang,
            block.timestamp
        );

        soLuongGiaoDich++;
        emit GiaoDichGhiNhan(_maDonHang, _maSanPham, _tenSanPham, msg.sender, _tongTien, _nguonThanhToan, _maGiaoDich);
    }

    // Hàm kiểm tra giao dịch có tồn tại không
    function chungThucGiaoDich(uint _maDonHang) public view returns (bool) {
        return giaoDichs[_maDonHang].maDonHang != 0;
    }

    // Hàm truy vấn thông tin giao dịch theo mã đơn hàng
    function layThongTinGiaoDich(uint _maDonHang) public view returns (
        uint, uint, string memory, string memory, address, uint, uint, string memory, string memory, string memory, string memory, uint
    ) {
        require(giaoDichs[_maDonHang].maDonHang != 0, "Giao dich khong ton tai");
        GiaoDich memory gd = giaoDichs[_maDonHang];
        return (
            gd.maDonHang,
            gd.maSanPham,
            gd.tenSanPham,
            gd.danhMuc,
            gd.khachHang,
            gd.soLuong,
            gd.tongTien,
            gd.nguonThanhToan,
            gd.maGiaoDich,
            gd.maVanDon,
            gd.trangThaiGiaoHang,
            gd.thoiGianDatHang
        );
    }
}
